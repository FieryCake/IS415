#iii)
####QIYANG HELP - my x-axis is fucked, idk how to fix it
h.rev <- hist(dt$Revenue,
main = "Histogram for Revenue Distribution",
xlab = "Total Revenue",
ylab = "No. of Concerts",
col=c("hotpink"),
ylim=c(0,200),
xlim = c(0, ((max(dt$Revenue, na.rm = TRUE) %/% 5e+06) + 1) * 5e+06),
labels=TRUE)
#iii)
####QIYANG HELP - my x-axis is fucked, idk how to fix it
h.rev <- hist(dt$Revenue,
main = "Histogram for Revenue Distribution",
xlab = "Total Revenue",
ylab = "No. of Concerts",
col=c("hotpink"),
ylim=c(0,200),
xlim = c(0, ((max(dt$Revenue, na.rm = TRUE) %/% 5e+06) + 1) * 5e+06),
breaks = 10,
labels=TRUE)
#iii)
####QIYANG HELP - my x-axis is fucked, idk how to fix it
h.rev <- hist(dt$Revenue,
main = "Histogram for Revenue Distribution",
xlab = "Total Revenue",
ylab = "No. of Concerts",
col=c("hotpink"),
ylim=c(0,200),
xlim = c(0, ((max(dt$Revenue, na.rm = TRUE) %/% 5e+06) + 1) * 5e+06),
breaks = 20,
labels=TRUE)
#iii)
####QIYANG HELP - my x-axis is fucked, idk how to fix it
h.rev <- hist(dt$Revenue,
main = "Histogram for Revenue Distribution",
xlab = "Total Revenue",
ylab = "No. of Concerts",
col=c("hotpink"),
ylim=c(0,200),
xlim = c(0, ((max(dt$Revenue, na.rm = TRUE) %/% 5e+06) + 1) * 5e+06),
breaks = 10,
labels=TRUE)
#iii)
####QIYANG HELP - my x-axis is fucked, idk how to fix it
h.rev <- hist(dt$Revenue,
main = "Histogram for Revenue Distribution",
xlab = "Total Revenue",
ylab = "No. of Concerts",
col=c("hotpink"),
ylim=c(0,200),
xlim = c(0, ((max(dt$Revenue, na.rm = TRUE) %/% 5e+06) + 1) * 5e+06),
labels=TRUE)
#iii)
####QIYANG HELP - my x-axis is fucked, idk how to fix it
h.rev <- hist(dt$Revenue,
main = "Histogram for Revenue Distribution",
xlab = "Total Revenue",
ylab = "No. of Concerts",
col=c("hotpink"),
ylim=c(0,200),
xlim = c(0, ((max(dt$Revenue, na.rm = TRUE) %/% 5e+06) + 1) * 5e+06),
nxax = "n",
labels=TRUE)
#iii)
####QIYANG HELP - my x-axis is fucked, idk how to fix it
h.rev <- hist(dt$Revenue,
main = "Histogram for Revenue Distribution",
xlab = "Total Revenue",
ylab = "No. of Concerts",
col=c("hotpink"),
ylim=c(0,200),
xlim = c(0, ((max(dt$Revenue, na.rm = TRUE) %/% 5e+06) + 1) * 5e+06),
labels=TRUE)
#iii)
####QIYANG HELP - my x-axis is fucked, idk how to fix it
h.rev <- hist(dt$Revenue,
main = "Histogram for Revenue Distribution",
xlab = "Total Revenue",
ylab = "No. of Concerts",
col=c("hotpink"),
ylim=c(0,200),
xlim = c(0, ((max(dt$Revenue, na.rm = TRUE) %/% 5e+06) + 1) * 5e+06),
labels=TRUE)
pacman::p_load(sf, tidyverse)
install.packages(pacman)
install.packages('pacman')
pacman::p_load(sf, tidyverse)
#1.4.1
mpsz = st_read(dsn = "Geospatial/Master Plan/MasterPlan2014SubzoneBoundaryWebSHP",
layer = "MP14_SUBZONE_WEB_PL")
#1.4.1
mpsz = st_read(dsn = "Geospatial/Master Plan",
layer = "MP14_SUBZONE_WEB_PL")
#1.4.2
cyclingpath = st_read(dsn = "Geospatial/CyclingPlan",
layer = "CyclingPathGazette")
#1.4.2
cyclingpath = st_read(dsn = "Geospatial/CyclingPath",
layer = "CyclingPathGazette")
#1.4.3
preschool = st_read("Geospatial/Pre-School Location/PreSchoolsLocation.kml")
#1.5.1
st_geometry(mpsz)
#1.5.2
glimpse(mpsz)
#1.5.3
head(mpsz, n = 5)
plot(mpsz)
plot(st_geometry(mpsz))
plot(mpsz)
plot(st_geometry(mpsz))
plot(mpsz["PLN_AREA_N"])
#1.7.1
st_crs(mpsz)
st_crs(mpsz3414)
#1.7.1
st_crs(mpsz)
mpsz3414 <- st_set_crs(mpsz, 3414)
st_crs(mpsz3414)
preschool
#1.7.1
st_crs(mpsz)
mpsz3414 <- st_set_crs(mpsz, 3414)
st_crs(mpsz3414)
#1.7.2
preschool3414 <- st_transform(preschool,
crs = 3414)
listings <- read_csv("Aspatial/Airbnb Listings/listings.csv")
listings <- read_csv("Aspatial/Airbnb Listing/listings.csv")
spec()
list(listings)
#1.8.2
listings_sf <- st_as_sf(listings,
coords = c("longitude", "latitude"),
crs=4326) %>%
st_transform(crs = 3414)
#1.8.1
listings <- read_csv("Aspatial/Airbnb Listing/listings.csv")
list(listings)
#1.8.2
listings_sf <- st_as_sf(listings,
coords = c("longitude", "latitude"),
crs=4326) %>%
st_transform(crs = 3414)
glimpse(listings_sf)
st_buffer
st_buffer
st_buffer()
st_buffer??
??st_buffer
#1.9.1
buffer_cycling <- st_buffer(cyclingpath,
dist=5, nQuadSegs = 30)
buffer_cycling$AREA <- st_area(buffer_cycling)
sum(buffer_cycling$AREA)
#1.9.2
mpsz3414$`PreSch Count`<- lengths(st_intersects(mpsz3414, preschool3414))
summary(mpsz3414$`PreSch Count`)
top_n(mpsz3414, 1, `PreSch Count`)
df <- data.frame(x = c(6, 4, 1, 10, 3, 1, 1))
df
top_n(df)
top_n(df, 2)
#1.9.1
buffer_cycling <- st_buffer(cyclingpath,
dist=5, nQuadSegs = 30)
buffer_cycling$AREA <- st_area(buffer_cycling)
sum(buffer_cycling$AREA)
#1.9.2
mpsz3414$`PreSch Count`<- lengths(st_intersects(mpsz3414, preschool3414))
summary(mpsz3414$`PreSch Count`)
top_n(mpsz3414, 1, `PreSch Count`)
mpsz3414$Area <- mpsz3414 %>%
st_area()
mpsz3414 <- mpsz3414 %>%
mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)
hist(mpsz3414$`PreSch Density`)
ggplot(data=mpsz3414,
aes(x= as.numeric(`PreSch Density`)))+
geom_histogram(bins=20,
color="black",
fill="light blue") +
labs(title = "Are pre-school even distributed in Singapore?",
subtitle= "There are many planning sub-zones with a single pre-school, on the other hand, \nthere are two planning sub-zones with at least 20 pre-schools",
x = "Pre-school density (per km sq)",
y = "Frequency")
ggplot(data=mpsz3414,
aes(y = `PreSch Count`,
x= as.numeric(`PreSch Density`))) +
geom_point(color="black",
fill="light blue") +
xlim(0, 40) +
ylim(0, 40) +
labs(title = "",
x = "Pre-school density (per km sq)",
y = "Pre-school count")
library(installr)
install.packages("installr")
install.packages(c("usethis", "quarto"))
install.packages("devtools")
install.packages("rmarkdown")
install.packages("git4r")
remove.packages("Rcpp")
remove.packages("tmap")
install.packages("Rcpp")
install.packages("tmap")
library(tmap)
remotes::install_github('r-tmap/tmap')
library(tmap)
gc()
??tidyverse
pacman::p_load(tidyverse)
temperatures <- list("20 Fahrenheit (NYC)", "45 F (NYC)", "28 degrees (SG)",
"10 degrees (Toronto)", "55 F (NYC)", "30 degrees (SG)",
"28.4 F (Toronto)", "59 Fahrenheit (Toronto)", "1 degrees (Toronto)",
"68 F (NYC)", "32 degrees (SG)", "26 degrees (SG)",
"-5 degrees (Toronto)", "22 degrees (SG)", "35 F (NYC)")
temp_value <- temperatures %>%
str_extract_all("\{d}")
temp_value
temp_value <- temperatures %>%
str_extract_all("\d")
temp_value <- temperatures %>%
str_extract_all("/d")
temp_value
temp_value <- temperatures %>%
str_extract_all("/d{1}")
temp_value
temp_value <- temperatures %>%
str_extract_all("//d{1}")
temp_value
temp_value <- temperatures %>%
str_extract_all("degrees")
temp_value
temp_value <- temperatures %>%
str_extract_all("d/")
temp_value
temp_value <- temperatures %>%
str_extract_all("\\d")
temp_value
temp_value <- temperatures %>%
str_extract("\\d")
temp_value
temp_value <- temperatures %>%
str_extract("\\d+")
temp_value
temp_value <- temperatures %>%
str_extract("-?\\d+")
temp_value
temp_value <- temperatures %>%
str_extract("-?\\d+\.?")
temp_value <- temperatures %>%
str_extract("-?\\d+\.?")
temp_value
temp_value <- temperatures %>%
str_extract("-?\\d+/.?")
temp_value
temp_value <- temperatures %>%
str_extract("-?\\d+.?")
temp_value
temp_value <- temperatures %>%
str_extract("-?\\d+\\.?")
temp_value
temp_value <- temperatures %>%
str_extract("-?\\d+\.?")
temp_value
str_extract("\", "\")
str_extract("\", "\\")
str_extract("\", "\\\")
str_extract("\", "\\")
str_extract("\", "")
str_extract("\\", "")
str_extract("\\", "\\")
str_extract("\\", "\")
str_extract("\\", "\\\\")
str_extract("\\", "\\")
temp_value <- temperatures %>%
str_extract("-?\\d+[.]?\\d+?")
temp_value
temp_value <- temperatures %>%
str_extract("-?\\d+([.]\\d+)?")
temp_value
is_Fahrenheit <- temperatures %>%
str_detect("!degrees")
is_Fahrenheit
is_Fahrenheit <- temperatures %>%
str_detect("~degrees")
is_Fahrenheit
is_Fahrenheit <- temperatures %>%
str_detect("~(degrees)")
is_Fahrenheit
is_Fahrenheit <- temperatures %>%
str_detect("degrees")
is_Fahrenheit
is_Fahrenheit <- temperatures %>%
!str_detect("degrees")
is_Fahrenheit
is_Fahrenheit <- temperatures %>%
~str_detect("degrees")
is_Fahrenheit
is_Fahrenheit <- temperatures %>%
str_detect("degrees") %>% '!'
is_Fahrenheit
is_Fahrenheit <- temperatures %>%
str_detect("degrees") %>% '!'
is_Fahrenheit <- temperatures %>%
str_detect("degrees")
is_Fahrenheit
is_Fahrenheit <- temperatures %>%
str_detect("degrees") %>% !
is_Fahrenheit
is_Fahrenheit <- temperatures %>%
str_detect("degrees") %>% not()
is_Fahrenheit
is_Fahrenheit <- temperatures %>%
not(str_detect("degrees"))
is_Fahrenheit <- temperatures %>%
str_detect("degrees") %>% !
is_Fahrenheit
is_Fahrenheit <- temperatures %>%
str_detect("degrees") %>% !
is_Fahrenheit
is_Fahrenheit <- temperatures %>%
str_detect("degrees")
is_Fahrenheit
is_Fahrenheit <- temperatures %>%
str_detect("degrees") %>% Negate()
is_Fahrenheit
is_Fahrenheit <- temperatures %>%
Negate(str_detect("degrees"))
is_Fahrenheit
is_Fahrenheit <- temperatures %>%
str_detect("degrees", negate = TRUE)
is_Fahrenheit
temperatures[is_Fahrenheit]
temperatures[is_Fahrenheit] <- temperatures[is_Fahrenheit] %>%
lapply(Fahrenheit_to_Celsius)
temperatures
temp_value[is_Fahrenheit] <- temp_value[is_Fahrenheit] %>%
lapply(Fahrenheit_to_Celsius)
temp_value
Fahrenheit_to_Celsius <- function(Fahrenheit) {
return((Fahrenheit − 32) × 5/9)
temp_value[is_Fahrenheit] <- temp_value[is_Fahrenheit] %>%
lapply(f(x): Fahrenheit_to_Celsius(x))
temp_value[is_Fahrenheit] <- temp_value[is_Fahrenheit] %>%
lapply(Fahrenheit_to_Celsius)
Fahrenheit_to_Celsius <- function(Fahrenheit) {
return((Fahrenheit − 32) × 5/9)
return(celsius)
Fahrenheit_to_Celsius <- function(Fahrenheit) {
celsius = (Fahrenheit − 32) × 5/9
Fahrenheit_to_Celsius <- function(Fahrenheit) {
celsius = (Fahrenheit − 32) × 5/9
temp_value[is_Fahrenheit] <- temp_value[is_Fahrenheit] %>%
lapply(Fahrenheit_to_Celsius)
Fahrenheit_to_Celsius <- function(Fahrenheit) {
celsius = (Fahrenheit − 32) × 5/9
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
celsius = (Fahrenheit - 32) × 5/9
celsius = (Fahrenheit - 32) * 5/9
Fahrenheit_to_Celsius <- function(Fahrenheit) {
celsius = (Fahrenheit - 32) * 5/9
return(celsius)
}
temp_value[is_Fahrenheit] <- temp_value[is_Fahrenheit] %>%
lapply(Fahrenheit_to_Celsius)
temp_value <- temperatures %>% # Extract all numeric values using regular expressions
str_extract("-?\\d+([.]\\d+)?") %>%
as.numeric()
temp_value
temp_value[is_Fahrenheit] <- temp_value[is_Fahrenheit] %>%
lapply(Fahrenheit_to_Celsius)
temp_value
source("~/.active-rstudio-document", echo=TRUE)
pacman::p_load(tidyverse) #Import necessary data manipulation libraries
temperatures <- list("20 Fahrenheit (NYC)", "45 F (NYC)", "28 degrees (SG)",
"10 degrees (Toronto)", "55 F (NYC)", "30 degrees (SG)",
"28.4 F (Toronto)", "59 Fahrenheit (Toronto)", "1 degrees (Toronto)",
"68 F (NYC)", "32 degrees (SG)", "26 degrees (SG)",
"-5 degrees (Toronto)", "22 degrees (SG)", "35 F (NYC)")
Fahrenheit_to_Celsius <- function(Fahrenheit) {
celsius = (Fahrenheit - 32) * 5/9
return(celsius)
}
temp_value <- temperatures %>% # Extract all numeric values using regular expressions
str_extract("-?\\d+([.]\\d+)?") %>%
as.numeric()
temp_value
is_Fahrenheit <- temperatures %>% # Check which values are in terms of Fahrenheit
str_detect("degrees", negate = TRUE)
is_Fahrenheit
temp_value[is_Fahrenheit] <- temp_value[is_Fahrenheit] %>%
lapply(Fahrenheit_to_Celsius)
temp_value
source("~/.active-rstudio-document", echo=TRUE)
temp_value %>%
str(temp_value)
temp_value
temp_value <- temperatures %>% # Extract all numeric values using regular expressions
str_extract("-?\\d+([.]\\d+)?") %>%
as.numeric()
print(temp_value)
is_Fahrenheit <- temperatures %>% # Check which values are in terms of Fahrenheit
str_detect("degrees", negate = TRUE)
print(is_Fahrenheit)
temp_value %>%
as.character(temp_value)
temp_value %>%
as.character(temp_value) %>%
paste(" degrees")
temp_value %>%
as.character(temp_value) %>%
paste("degrees")
converted_temperatures <- temp_value %>%
as.character(temp_value) %>%
paste("degrees")
print(converted_temperatures)
nyc <- temperatures %>%
str_detect("NYC")
toronto <- temperatures %>%
str_detect("Toronto")
sg <- temperatures %>%
str_detect("SG")
by_country <- list(NYC = converted_temperatures[nyc],
Toronto = converted_temperatures[toronto],
SG = converted_temperatures[sg])
print(by_country)
pacman::p_load(tidyverse) #Import necessary data manipulation libraries
temperatures <- list("20 Fahrenheit (NYC)", "45 F (NYC)", "28 degrees (SG)",
"10 degrees (Toronto)", "55 F (NYC)", "30 degrees (SG)",
"28.4 F (Toronto)", "59 Fahrenheit (Toronto)", "1 degrees (Toronto)",
"68 F (NYC)", "32 degrees (SG)", "26 degrees (SG)",
"-5 degrees (Toronto)", "22 degrees (SG)", "35 F (NYC)")
Fahrenheit_to_Celsius <- function(Fahrenheit) {
celsius = (Fahrenheit - 32) * 5/9
return(celsius)
}
temp_value <- temperatures %>% # Extract all numeric values using regular expressions
str_extract("-?\\d+([.]\\d+)?") %>%
as.numeric()
print(temp_value)
is_Fahrenheit <- temperatures %>% # Check which values are in terms of Fahrenheit
str_detect("degrees", negate = TRUE)
print(is_Fahrenheit)
temp_value[is_Fahrenheit] <- temp_value[is_Fahrenheit] %>% # Convert the values using self defined function
lapply(Fahrenheit_to_Celsius)
print(temp_value)
converted_temperatures <- temp_value %>%
as.character(temp_value) %>%
paste("degrees")
print(converted_temperatures)
nyc <- temperatures %>%
str_detect("NYC")
toronto <- temperatures %>%
str_detect("Toronto")
sg <- temperatures %>%
str_detect("SG")
by_country <- list(NYC = converted_temperatures[nyc],
Toronto = converted_temperatures[toronto],
SG = converted_temperatures[sg])
print(by_country)
shiny::runApp('C:/Users/yungq/Desktop/App - Copy')
runApp('C:/Users/yungq/Desktop/App - Copy')
shiny::runApp('C:/Users/yungq/Desktop/App - Copy')
get(paste(input$zone, input$amenities3,sep=""))
get(paste("area", "All",sep=""))
islandPoly<- read_rds("data/rds/mpsz.rds")
C:/Users/yungq/Desktop/App - Copy/app.R
islandPoly<- read_rds("data/rds/mpsz.rds")
islandPoly<- read_rds("data/rds/mpsz.rds")
setwd("C:/Users/yungq/Desktop/App - Copy")
islandPoly<- read_rds("data/rds/mpsz.rds")
supermarkets_frequencyFinal<- read_rds("data/rds/supermarketFrequency.rds")
combinedfrequencyFinal<- read_rds("data/rds/combinedFrequency.rds")
localMoranData<- read_rds("data/rds/localMoran.rds")
localMoranData2<- read_rds("data/rds/localMoran2.rds")
localMoranData3<- read_rds("data/rds/localMoran3.rds")
localMoranData4<- read_rds("data/rds/localMoran4.rds")
localMoranData5<- read_rds("data/rds/localMoran5.rds")
areaAll <-read_rds("data/rds/hotspot.rds")
subzoneAll <-read_rds("data/rds/hotspot2.rds")
areaSupermarket <-read_rds("data/rds/hotspot3.rds")
subzoneSupermarket <-read_rds("data/rds/hotspot4.rds")
areaMrt<-read_rds("data/rds/hotspot5.rds")
areaHawker<-read_rds("data/rds/hotspot7.rds")
areaMall<-read_rds("data/rds/hotspot9.rds")
subzoneMrt<-read_rds("data/rds/hotspot6.rds")
subzoneHawker<-read_rds("data/rds/hotspot8.rds")
subzoneMall<-read_rds("data/rds/hotspot10.rds")
get(paste("area", "All",sep=""))
runApp()
runApp()
tmap_options(check.and.fix=TRUE)
runApp()
runApp()
tm_shape(get(paste("area", "All", sep=""))) +
tm_fill(col = "cluster", id = "SUBZONE_N", alpha = 0.5) +
tm_borders() +
tm_scale_bar()
tm_mouse_coordinates()
tm_shape(get(paste("area", "All", sep=""))) +
tm_fill(col = "cluster", id = "SUBZONE_N", alpha = 0.5) +
tm_borders() +
tm_scale_bar() +
tm_mouse_coordinates()
runApp()
runApp()
shiny::runApp()
runApp()
